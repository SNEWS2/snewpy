# Workflow that installs SNOwGLoBES and runs an integration test

name: Integration Tests

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [review_requested, ready_for_review]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      # Add a list of python versions we want to use for testing.
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-benchmark 
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Install SNEWPY
        run: |
          python setup.py install --user
      - name: Install SNOwGLoBES
        run: |
          mkdir opt
          cd opt
          wget https://www.mpi-hd.mpg.de/personalhomes/globes/download/globes-3.2.17.tar.gz
          tar -zxf globes-3.2.17.tar.gz
          cd globes-3.2.17/
          ./configure --prefix=$GITHUB_WORKSPACE/opt/globes-3.2.17-install  --disable-binary
          make
          make install
          export GLB_DIR=${GITHUB_WORKSPACE}/opt/globes-3.2.17-install
          # Install SNOwGLoBES
          cd ${GITHUB_WORKSPACE}/opt/
          git clone https://github.com/SNOwGLoBES/snowglobes.git
          cd snowglobes
          export SNOWGLOBES=${PWD}
          cd src
          make
          make install
      - name: Run Integration Tests
        run: |
          export SNOWGLOBES=${GITHUB_WORKSPACE}/opt/snowglobes
          python -m unittest python/snewpy/test/snowglobes_integrationtest.py
          python -m unittest python/snewpy/test/simplerate_integrationtest.py
          pytest -m 'snowglobes' --benchmark-json output.json
      - name: Publish benchmark results
        if: ${{ github.event_name == 'pull_request' }}
        uses: nils-braun/pytest-benchmark-commenter@v2
