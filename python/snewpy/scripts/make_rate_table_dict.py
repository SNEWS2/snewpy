import numpy as np
from astropy import units as u
from snewpy import snowglobes
from pprint import pprint
from datetime import datetime

def calc_total_rate(model_name, model_file,transform,detectors):
    #guess model name
    model_path = f'models/{model_name}/{model_file}'
    path = snowglobes.generate_fluence(model_path,model_name,transform,d=10)
    tables = snowglobes.simulate(None,path,detector_input=detectors)
    result = {}
    for det,table in tables.items():
        table = list(table.values())[0] #take the first and the only time bin
        result[det] = table['weighted']['smeared'].values.sum()
    return result

def make_rate_table(detectors=['icecube','wc100kt30prct','ar40kt','novaND','novaFD','halo1','halo2']):
    result = {( model_name, model_file, xform):
                    calc_total_rate(model_name,model_file,xform,detectors)
                for xform in ['AdiabaticMSW_NMO','AdiabaticMSW_IMO']
                for model_file in ['s11.2c','s27.0c']
                for model_name in ['Bollig_2016']
             }
    return result

if __name__=='__main__':
    result = make_rate_table()
    #save the crosscheck table in a file
    print(f'#generated by "make_rate_table.py" on {str(datetime.now())}')
    print('rate_table= \\')
    pprint(result)
